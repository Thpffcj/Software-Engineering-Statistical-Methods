#encoding=utf-8

'''
人口普查是一项重要的国情调查，对于国家管理、制定各项方针政策具有重要的意义，中国最早的一次人口普查在西汉汉平帝元始二年进行，而自中华人民共和国建国以来分别在1953、1964、
1982、1990、2000和2010年进行了共六次人口普查，其中第六次人口普查分别涉及到了人口增长、家庭户人口、性别构成、年龄构成、民族构成、受教育程度、城乡人口、人口流动性等八方面。
现有《各地区分性别、健康状况的60岁及以上老年人口》调查数据、《各地区户数、人口数和性别比》调查数据，定义老龄率=60岁及以上人口数*100/总人口数，以北京市为例，
其老龄率为250084*100/1849475=13.52，请编写python代码回答如下问题：
以各省市数据为代表，求取中国省级老龄率均值的置信区间、方差的置信区间，置信水平均为90%，假设老龄率符合正态分布

当前世界全球变暖现象严重，为了探索中国是否也存在这个现象，现调查了中国主要城市的全年气温情况，包括2010年全年气温状况与2014年全年气温状况，以8月份气温为例，假设主要城市温度
符合正态分布，试比较是否存在温度上升现象？（需给出证明过程，仅回答YES或NO不得分）
'''

import numpy as np
import scipy.stats as stats

class Solution1():
	def solve(self):
		poptotal = [1849475
,1127589
,7037620
,3477805
,2310941
,4252076
,2551123
,3465051
,2253525
,7577122
,5400348
,5312628
,3477491
,4251692
,9272503
,9224288
,5226904
,6096586
,9676589
,4362551
,826560
,2609882
,8161604
,3332265
,4467537
,265904
,3614887
,2623094
,535412
,611957
,2086576
]
		popold = [250084
,162233
,928642
,414649
,275828
,672227
,349177
,468616
,345592
,1247962
,759091
,853195
,420377
,504043
,1400109
,1196924
,779566
,939818
,957360
,616828
,93525
,488115
,1412294
,446686
,514563
,20828
,487378
,338325
,51945
,61207
,201515
]
		n_popold = np.array(popold)
		n_poptotal = np.array(poptotal)
		rate = n_popold * 100.0 / n_poptotal
#		print rate
		n = len(rate)
		m = rate.mean()
		s = np.sqrt(rate.var()*n/(n-1))
		ave1 = m - s/np.sqrt(n)*stats.t.ppf(0.95, n-1)
		ave2 = m + s / np.sqrt(n) * stats.t.ppf(0.95, n - 1)
		s1 = (n-1)*s*s/stats.chi2.ppf(0.95, n-1)
		s2 = (n - 1) * s * s / stats.chi2.ppf(0.05, n - 1)
		print [[ave1, ave2], [s1, s2]]
		return [[ave1, ave2], [s1, s2]]

class Solution2():
	def solve(self):
		y2014 = [27.3, 27.7
			,27.9
			,23.6
			,20.6
			,24.3
			,22.6
			,22.5
			,31
			,30.8
			,31.3
			,31.1
			,29.6
			,31.6
			,28.6
			,30.1
			,30.6
			,32
			,27.5
			,27.7
			,27.9
			,30.5
			,26.5
			,23.1
			,19.9
			,15.9
			,28.3
			,21
			,18.2
			,24.4
			,22.8
				 ]
		y2010 = [25.7
,25.6
,25.6
,22.4
,21.7
,23.3
,23
,22.2
,27.9
,27.2
,28.4
,27.5
,29.3
,29.4
,25.1
,26
,29.1
,29.4
,29.9
,28.8
,28.1
,28.4
,25
,23.6
,20.6
,16.4
,24.7
,18.3
,15.4
,21.3
,22.9
]
		n_y2010 = np.array(y2010)
		n_y2014 = np.array(y2014)
		c = n_y2014-n_y2010
#		print c
		n = len(c)
		d = c.mean()
		s = np.sqrt(c.var()*n/(n-1))
		t = d/s/np.sqrt(n)
		de = stats.t.ppf(0.95, n-1)
		if t >= de:
			print t, de, 'NO'
			return 'NO'
		else:
			print t, de, 'YES'
			return 'YES'

if __name__ == '__main__':
	s = Solution1()
	s.solve()